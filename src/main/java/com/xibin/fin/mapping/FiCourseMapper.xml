<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xibin.fin.dao.FiCourseMapper" >
  <resultMap id="BaseResultMap" type="com.xibin.fin.pojo.FiCourse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_no" property="courseNo" jdbcType="VARCHAR" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="to_go" property="toGo" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DOUBLE" />
    <result column="is_parent" property="isParent" jdbcType="VARCHAR" />
    <result column="auxiliary" property="auxiliary" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    fc.id, fc.course_no, fc.course_name,fc.to_go, fc.type, fc.balance, fc.is_parent,fc.auxiliary,fc.remark, fc.creator, fc.create_time, fc.modifier, fc.modify_time, fc.rec_ver, 
    fc.company_id,fc.book_id
  </sql>
  
  <!-- 条件 -->
  <sql id="findByConditionWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND fc.id = #{id}</if> 
          
          <if test="types!=null and types!=''"> 
          	AND fc.type in 
          	<foreach item="item" index="index" collection="types" open="(" separator="," close=")">  
      			#{item}  
     	  	</foreach>
          </if>
          
          <if test="courseNo!=null and courseNo!=''"> AND fc.course_no = #{courseNo}</if>
          <if test="courseName!=null and courseName!=''"> AND fc.course_name = #{courseName}</if>
          <if test="companyId!=null and companyId!=''"> AND fc.company_id = #{companyId}</if>
  </sql>
  <!-- 条件 -->
  <sql id="findByExampleWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND fc.id = #{id}</if>
          <if test="companyId!=null and companyId!=''"> AND fc.company_id = #{companyId}</if>
  </sql>
  <!-- 【固定】：按主键查询 -->
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
  	  select
      <include refid="Base_Column_List"/>
      from fi_course fc
      WHERE id in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
	           #{item}
	  </foreach>
  </select>
  
  <!-- 【固定】：插入记录（支持一条及多条） -->
  <insert id="insert" parameterType="java.util.Collection">
  	INSERT INTO fi_course
          (id, course_no,course_name,to_go,type,balance,is_parent,auxiliary,remark, creator, create_time, modifier, modify_time, rec_ver, 
    company_id)
       VALUES
  		<foreach collection="list" item="item" index="index" separator=",">
	   		(#{item.id}, #{item.courseNo}, #{item.courseName},#{item.toGo}, #{item.type},#{item.balance}, #{item.isParent},#{item.auxiliary},
      #{item.remark},#{item.creator},#{item.createTime}, #{item.modifier},  #{item.modifyTime},
      #{item.recVer}, #{item.companyId})
  		</foreach>
  </insert>
  
  <!-- 【固定】：删除记录 -->
  <delete id="delete" parameterType="java.lang.reflect.Array">
      DELETE FROM fi_course WHERE id in 
   <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
           #{item}   
   </foreach>
  </delete>
  
  <!-- 【固定】：更新记录（支持一条及多条） -->
  <update id="update" parameterType="java.util.Collection">
	UPDATE fi_course
	<trim prefix="set" suffixOverrides=",">
		<!-- 更新的字段集合 -->
		<trim prefix="course_no =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.courseNo}
             </foreach>
		</trim>
		<trim prefix="course_name =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.courseName}
             </foreach>
		</trim>
		<trim prefix="to_go =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.toGo}
             </foreach>
		</trim>
		<trim prefix="type =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.type}
             </foreach>
		</trim>
		<trim prefix="balance =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.balance}
             </foreach>
		</trim>
		<trim prefix="is_parent =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.isParent}
             </foreach>
		</trim>
		<trim prefix="auxiliary =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.auxiliary}
             </foreach>
		</trim>
		<trim prefix="remark =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.remark}
             </foreach>
		</trim>
		
		
		<trim prefix="modifier =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifier}
             </foreach>
		</trim>
		<trim prefix="modify_time =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifyTime}
             </foreach>
		</trim>
		<trim prefix="rec_ver =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.recVer}
             </foreach>
		</trim>
		<trim prefix="company_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.companyId}
             </foreach>
		</trim>
	</trim>
	WHERE
	<foreach collection="list" separator="or" item="item" index="index" >
		<if test="item.id!=null">
		(ID=#{item.id}) AND (REC_VER=#{item.recVer}-1)
		</if>
	</foreach>	
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fi_course fc
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByPage" resultMap="BaseResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
    from fi_course fc
    <include refid="findByConditionWhere" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xibin.fin.pojo.FiCourse">
    select 
    <include refid="Base_Column_List" />
    from fi_course fc
    <include refid="findByExampleWhere" />
  </select>
  <select id="selectByKey" resultMap="BaseResultMap" resultType="java.util.List"  parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fi_course fc
    where fv.course_no = #{courseNo,jdbcType=VARCHAR}
    and
    fc.company_id = #{companyId,jdbcType=INTEGER}
  </select>
  
 
  
  
</mapper>