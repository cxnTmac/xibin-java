<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xibin.fin.dao.FiVoucherMapper" >
  <resultMap id="BaseResultMap" type="com.xibin.fin.pojo.FiVoucher" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="voucher_num" property="voucherNum" jdbcType="INTEGER" />
    <result column="voucher_word" property="voucherWord" jdbcType="VARCHAR" />
    <result column="period" property="period" jdbcType="VARCHAR" />
    <result column="bill_date" property="billDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="from_order_type" property="fromOrderType" jdbcType="VARCHAR" />
    <result column="bill" property="bill" jdbcType="DOUBLE" />
    <result column="checker" property="checker" jdbcType="DOUBLE" />
    <result column="complete_date" property="completeDate" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    fv.id, fv.voucher_num, fv.voucher_word,fv.period, fv.bill_date, fv.status,fv.from_order_type, fv.bill,fv.checker, fv.complete_date, fv.remark, fv.creator, fv.create_time, fv.modifier, fv.modify_time, fv.rec_ver, 
    fv.company_id,fv.book_id
  </sql>
  
  <!-- 条件 -->
  <sql id="findByConditionWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND fv.id = #{id}</if>
          <if test="companyId!=null and companyId!=''"> AND fv.company_id = #{companyId}</if>
          <if test="billDateFm!=null and billDateFm!=''"> AND fv.bill_date &gt;= #{billDateFm}</if>
          <if test="billDateTo!=null and billDateTo!=''"> AND fv.bill_date &lt;= #{billDateTo}</if>
          <if test="bookId!=null and bookId!=''"> AND fv.book_id = #{bookId}</if>
  </sql>
  <!-- 条件 -->
  <sql id="findByExampleWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND fv.id = #{id}</if>
          <if test="voucherNum!=null and voucherNum!=''"> AND fv.voucher_num = #{voucherNum}</if>
          <if test="voucherWord!=null and voucherWord!=''"> AND fv.voucher_word = #{voucherWord}</if>
          <if test="period!=null and period!=''"> AND fv.period = #{period}</if>
          <if test="billDate!=null and billDate!=''"> AND fv.bill_date = #{billDate}</if>
          <if test="status!=null and status!=''"> AND fv.status = #{status}</if>
          <if test="bill!=null and bill!=''"> AND fv.bill = #{bill}</if>
          
          <if test="checker!=null and checker!=''"> AND fv.checker = #{checker}</if>
          <if test="companyId!=null and companyId!=''"> AND fv.company_id = #{companyId}</if>
          <if test="bookId!=null and bookId!=''"> AND fv.book_id = #{bookId}</if>
  </sql>
  <!-- 【固定】：按主键查询 -->
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
  	  select
      <include refid="Base_Column_List"/>
      from fi_voucher fv
      WHERE id in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
	           #{item}
	  </foreach>
  </select>
  
  <!-- 【固定】：插入记录（支持一条及多条） -->
  <insert id="insert" parameterType="java.util.Collection">
  	INSERT INTO fi_voucher
          (id, voucher_num,voucher_word,period,bill_date,status,from_order_type,bill,checker,complete_date,remark, creator, create_time, modifier, modify_time, rec_ver, 
    company_id,book_id)
       VALUES
  		<foreach collection="list" item="item" index="index" separator=",">
	   		(#{item.id}, #{item.voucherNum}, #{item.voucherWord},#{item.period}, #{item.billDate},#{item.status},#{item.fromOrderType}, #{item.bill},#{item.checker}, #{item.completeDate}, 
      #{item.remark},#{item.creator},#{item.createTime}, #{item.modifier},  #{item.modifyTime},
      #{item.recVer}, #{item.companyId},#{item.bookId})
  		</foreach>
  </insert>
  
  <!-- 【固定】：删除记录 -->
  <delete id="delete" parameterType="java.lang.reflect.Array">
      DELETE FROM fi_voucher WHERE id in 
   <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
           #{item}   
   </foreach>
  </delete>
  
  <!-- 【固定】：更新记录（支持一条及多条） -->
  <update id="update" parameterType="java.util.Collection">
	UPDATE fi_voucher
	<trim prefix="set" suffixOverrides=",">
		<!-- 更新的字段集合 -->
		<trim prefix="voucher_num =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.voucherNum}
             </foreach>
		</trim>
		<trim prefix="voucher_word =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.voucherWord}
             </foreach>
		</trim>
		<trim prefix="period =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.period}
             </foreach>
		</trim>
		<trim prefix="bill_date =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.billDate}
             </foreach>
		</trim>
		<trim prefix="status =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.status}
             </foreach>
		</trim>
		<trim prefix="from_order_type =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.fromOrderType}
             </foreach>
		</trim>
		<trim prefix="bill =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.bill}
             </foreach>
		</trim>
		<trim prefix="checker =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.checker}
             </foreach>
		</trim>
		<trim prefix="complete_date =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.completeDate}
             </foreach>
		</trim>
		<trim prefix="remark =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.remark}
             </foreach>
		</trim>
		
		
		<trim prefix="modifier =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifier}
             </foreach>
		</trim>
		<trim prefix="modify_time =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifyTime}
             </foreach>
		</trim>
		<trim prefix="rec_ver =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.recVer}
             </foreach>
		</trim>
		<trim prefix="company_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.companyId}
             </foreach>
		</trim>
		<trim prefix="book_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.bookId}
             </foreach>
		</trim>
	</trim>
	WHERE
	<foreach collection="list" separator="or" item="item" index="index" >
		<if test="item.id!=null">
		(ID=#{item.id}) AND (REC_VER=#{item.recVer}-1)
		</if>
	</foreach>	
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fi_voucher fv
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByPage" resultMap="BaseResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
    from fi_voucher fv
    <include refid="findByConditionWhere" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xibin.fin.pojo.FiVoucher">
    select 
    <include refid="Base_Column_List" />
    from fi_voucher fv
    <include refid="findByExampleWhere" />
  </select>
  <select id="selectByKey" resultMap="BaseResultMap" resultType="java.util.List"  parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fi_voucher fv
    where 1=1
    <if test="companyId!=null and companyId!=''">and fv.company_id = #{companyId,jdbcType=INTEGER}</if>
	<if test="period!=null and period!=''">and fv.period = #{period,jdbcType=VARCHAR}</if>
	<if test="voucherWord!=null and voucherWord!=''">and fv.voucher_word = #{voucherWord,jdbcType=VARCHAR}</if>
	<if test="voucherNum!=null and voucherNum!=''">and fv.voucher_num = #{voucherNum,jdbcType=VARCHAR}</if>
	<if test="bookId!=null and bookId!=''">and fv.book_id = #{bookId,jdbcType=INTEGER}</if>
  </select>
  
  <select id="getMaxVoucherNum" resultType="Integer">
    SELECT
		MAX(fv.voucher_num)
	FROM
		fi_voucher fv
	WHERE 1=1
	<if test="companyId!=null and companyId!=''">and fv.company_id = #{companyId,jdbcType=INTEGER}</if>
	<if test="period!=null and period!=''">and fv.period = #{period,jdbcType=VARCHAR}</if>
	<if test="voucherWord!=null and voucherWord!=''">and fv.voucher_word = #{voucherWord,jdbcType=VARCHAR}</if>
	<if test="bookId!=null and bookId!=''">and fv.book_id = #{bookId,jdbcType=INTEGER}</if>
  </select>
  
  <update id="updateStatus" parameterType="Map">
  	UPDATE fi_voucher fv
		SET fv.status = #{toStatus}
		WHERE 1=1
		AND	fv.company_id = #{companyId}
		AND fv.book_id = #{bookId}
		AND fv.period = #{period}
  </update>
  <update id="updateForEndTerm" parameterType="Map">
  	UPDATE fi_voucher fv
		SET fv.status = '20'
		WHERE 1=1
		AND	fv.company_id = #{companyId}
		AND fv.book_id = #{bookId}
		AND fv.period = #{period}
  </update>
</mapper>