<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xibin.fin.dao.FiBookMapper" >
  <resultMap id="BaseResultMap" type="com.xibin.fin.pojo.FiBook" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="book_code" property="bookCode" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="main_currency" property="mainCurrency" jdbcType="VARCHAR" />
    <result column="begin_year" property="beginYear" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="period" property="period" jdbcType="VARCHAR" />
    <result column="base_course" property="baseCourse" jdbcType="VARCHAR" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    fb.id,fb.book_code,fb.book_name, fb.main_currency, fb.begin_year,fb.period,fb.start_date, fb.base_course, fb.end_date, fb.status,fb.is_default,fb.remark, fb.creator, fb.create_time, fb.modifier, fb.modify_time, fb.rec_ver, 
    fb.company_id
  </sql>
  
  <!-- 条件 -->
  <sql id="findByConditionWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND fb.id = #{id}</if>
          <if test="companyId!=null and companyId!=''"> AND fb.company_id = #{companyId}</if>
          
  </sql>
  <!-- 条件 -->
  <sql id="findByExampleWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND fb.id = #{id}</if>
          <if test="bookCode!=null and bookCode!=''"> AND fb.book_code = #{bookCode}</if>
          <if test="bookName!=null and bookName!=''"> AND fb.book_name = #{bookName}</if>
          <if test="companyId!=null and companyId!=''"> AND fb.company_id = #{companyId}</if>
          <if test="isDefault!=null and isDefault!=''"> AND fb.is_default = #{isDefault}</if>
          
  </sql>
  <!-- 【固定】：按主键查询 -->
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
  	  select
      <include refid="Base_Column_List"/>
      from fi_book fb
      WHERE id in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
	           #{item}
	  </foreach>
  </select>
  
  <!-- 【固定】：插入记录（支持一条及多条） -->
  <insert id="insert" parameterType="java.util.Collection">
  	INSERT INTO fi_book
          (id,book_code,book_name,main_currency,begin_year,period,start_date,base_course,end_date,status,is_default,remark,creator,create_time,modifier,modify_time,rec_ver, 
    company_id)
       VALUES
  		<foreach collection="list" item="item" index="index" separator=",">
	   		(#{item.id}, #{item.bookCode},#{item.bookName}, #{item.mainCurrency},#{item.beginYear}, #{item.period}, #{item.startDate},#{item.baseCourse}, #{item.endDate},#{item.status},#{item.isDefault},
      #{item.remark},#{item.creator},#{item.createTime}, #{item.modifier},  #{item.modifyTime},
      #{item.recVer}, #{item.companyId})
  		</foreach>
  </insert>
  
  <!-- 【固定】：删除记录 -->
  <delete id="delete" parameterType="java.lang.reflect.Array">
      DELETE FROM fi_book WHERE id in 
   <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
           #{item}   
   </foreach>
  </delete>
  
  <!-- 【固定】：更新记录（支持一条及多条） -->
  <update id="update" parameterType="java.util.Collection">
	UPDATE fi_book
	<trim prefix="set" suffixOverrides=",">
		<!-- 更新的字段集合 -->
		<trim prefix="book_code =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.bookCode}
             </foreach>
		</trim>
		<trim prefix="book_name =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.bookName}
             </foreach>
		</trim>
		<trim prefix="main_currency =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.mainCurrency}
             </foreach>
		</trim>
		<trim prefix="begin_year =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.beginYear}
             </foreach>
		</trim>
		<trim prefix="period =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.period}
             </foreach>
		</trim>
		<trim prefix="start_date =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.startDate}
             </foreach>
		</trim>
		<trim prefix="base_course =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.baseCourse}
             </foreach>
		</trim>
		<trim prefix="end_date =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.endDate}
             </foreach>
		</trim>
		<trim prefix="status =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.status}
             </foreach>
		</trim>
		<trim prefix="is_default =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.isDefault}
             </foreach>
		</trim>
		<trim prefix="remark =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.remark}
             </foreach>
		</trim>
		
		
		<trim prefix="modifier =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifier}
             </foreach>
		</trim>
		<trim prefix="modify_time =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifyTime}
             </foreach>
		</trim>
		<trim prefix="rec_ver =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.recVer}
             </foreach>
		</trim>
		<trim prefix="company_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.companyId}
             </foreach>
		</trim>
		
	</trim>
	WHERE
	<foreach collection="list" separator="or" item="item" index="index" >
		<if test="item.id!=null">
		(ID=#{item.id}) AND (REC_VER=#{item.recVer}-1)
		</if>
	</foreach>	
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fi_book fb
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByPage" resultMap="BaseResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
    from fi_book fb
    <include refid="findByConditionWhere" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xibin.fin.pojo.FiBook">
    select 
    <include refid="Base_Column_List" />
    from fi_book fb
    <include refid="findByExampleWhere" />
  </select>
  
  <select id="selectByKey" resultMap="BaseResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
    from fi_book fb
    where 1=1
    and fb.company_id = #{companyId}
    and fb.book_code = #{bookCode}
  </select>
  
  
 
  
  
</mapper>