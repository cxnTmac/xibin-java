<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xibin.fin.dao.FiCourseBalanceMapper" >
  <resultMap id="BaseResultMap" type="com.xibin.fin.pojo.FiCourseBalance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_no" property="courseNo" jdbcType="VARCHAR" />
    <result column="period" property="period" jdbcType="TIMESTAMP" />
    <result column="start_balance" property="startBalance" jdbcType="DOUBLE" />
    <result column="end_balance" property="endBalance" jdbcType="DOUBLE" />
    <result column="sum_debit" property="sumDebit" jdbcType="DOUBLE" />
    <result column="sum_credit" property="sumCredit" jdbcType="DOUBLE" />
    <result column="accumulate_debit" property="accumulateDebit" jdbcType="DOUBLE" />
    <result column="accumulate_credit" property="accumulateCredit" jdbcType="DOUBLE" />
    <result column="year_balance" property="yearBalance" jdbcType="DOUBLE" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    
  </resultMap>
  <resultMap id="queryForBalanceSheetResultMap" type="com.xibin.fin.entity.FiCourseBalanceBSQueryItem" >
  	<result column="course_no" property="courseNo" jdbcType="VARCHAR" />
  	<result column="type" property="type" jdbcType="VARCHAR" />
    <result column="to_go" property="toGo" jdbcType="VARCHAR" />
    <result column="is_child" property="isChild" jdbcType="VARCHAR" />
    <result column="start_balance" property="startBalance" jdbcType="DOUBLE" />
    <result column="end_balance" property="endBalance" jdbcType="DOUBLE" />
    <result column="sum_debit" property="sumDebit" jdbcType="DOUBLE" />
    <result column="sum_credit" property="sumCredit" jdbcType="DOUBLE" />
    <result column="accumulate_debit" property="accumulateDebit" jdbcType="DOUBLE" />
    <result column="accumulate_credit" property="accumulateCredit" jdbcType="DOUBLE" />
    <result column="year_balance" property="yearBalance" jdbcType="DOUBLE" />
  </resultMap>
  
  
  
  <resultMap id="queryCourseBalanceForVoucherGLResultMap" type="com.xibin.fin.entity.FiCourseBalanceGLQueryItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_no" property="courseNo" jdbcType="VARCHAR" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="to_go" property="toGo" jdbcType="VARCHAR" />
    <result column="period" property="period" jdbcType="TIMESTAMP" />
    <result column="start_balance" property="startBalance" jdbcType="DOUBLE" />
    <result column="end_balance" property="endBalance" jdbcType="DOUBLE" />
    <result column="sum_debit" property="sumDebit" jdbcType="DOUBLE" />
    <result column="sum_credit" property="sumCredit" jdbcType="DOUBLE" />
    <result column="accumulate_debit" property="accumulateDebit" jdbcType="DOUBLE" />
    <result column="accumulate_credit" property="accumulateCredit" jdbcType="DOUBLE" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="rec_ver" property="recVer" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    
  </resultMap>
  
  
  <resultMap id="queryCourseBalanceForwardResultMap" type="com.xibin.fin.entity.FiCourseBalanceForwardQueryItem" >
    
    <result column="course_no" property="courseNo" jdbcType="VARCHAR" />

    <result column="debit_balance" property="debitBalance" jdbcType="DOUBLE" />
    <result column="credit_balance" property="creditBalance" jdbcType="DOUBLE" />
    
    
  </resultMap>
  
  <sql id="Base_Column_List" >
    fcb.id, fcb.period, fcb.course_no,fcb.start_balance, fcb.end_balance,fcb.sum_debit,fcb.sum_credit,fcb.accumulate_debit,fcb.accumulate_credit,fcb.year_balance,fcb.remark, fcb.creator, fcb.create_time, fcb.modifier, fcb.modify_time, fcb.rec_ver, 
    fcb.company_id,fcb.book_id
  </sql>
  
  <!-- 条件 -->
  <sql id="findByConditionWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND fcb.id = #{id}</if>
          <if test="companyId!=null and companyId!=''"> AND fcb.company_id = #{companyId}</if>
          <if test="bookId!=null and bookId!=''"> AND fcb.book_id = #{bookId}</if>
  </sql>
  <!-- 条件 -->
  <sql id="findByExampleWhere">
      WHERE 1=1
          <if test="id!=null and id!=''"> AND fcb.id = #{id}</if>
          <if test="courseNo!=null and courseNo!=''"> AND fcb.course_no = #{courseNo}</if>
          <if test="period!=null and period!=''"> AND fcb.period = #{period}</if>
          <if test="companyId!=null and companyId!=''"> AND fcb.company_id = #{companyId}</if>
          <if test="bookId!=null and bookId!=''"> AND fcb.book_id = #{bookId}</if>
  </sql>
  <!-- 【固定】：按主键查询 -->
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
  	  select
      <include refid="Base_Column_List"/>
      from fi_course_balance fcb
      WHERE id in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
	           #{item}
	  </foreach>
  </select>
  
  <!-- 【固定】：插入记录（支持一条及多条） -->
  <insert id="insert" parameterType="java.util.Collection">
  	INSERT INTO fi_course_balance
          (id,course_no, period, start_balance,end_balance,sum_debit,sum_credit,accumulate_debit,accumulate_credit,year_balance,book_id,remark,creator,create_time,modifier,modify_time,rec_ver,company_id)
       VALUES
  		<foreach collection="list" item="item" index="index" separator=",">
	   		(#{item.id},#{item.courseNo},#{item.period},#{item.startBalance},#{item.endBalance},#{item.sumDebit},#{item.sumCredit},#{item.accumulateDebit},#{item.accumulateCredit},#{item.yearBalance},#{item.bookId},
      #{item.remark},#{item.creator},#{item.createTime},#{item.modifier},#{item.modifyTime},
      #{item.recVer},#{item.companyId})
  		</foreach>
  </insert>
  
  <!-- 【固定】：删除记录 -->
  <delete id="delete" parameterType="java.lang.reflect.Array">
      DELETE FROM fi_course_balance WHERE id in 
   <foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
           #{item}   
   </foreach>
  </delete>
  
  <!-- 【固定】：更新记录（支持一条及多条） -->
  <update id="update" parameterType="java.util.Collection">
	UPDATE fi_course_balance
	<trim prefix="set" suffixOverrides=",">
		<!-- 更新的字段集合 -->
		<trim prefix="course_no =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.courseNo}
             </foreach>
		</trim>
		<trim prefix="period =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.period}
             </foreach>
		</trim>
		<trim prefix="start_balance =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.startBalance}
             </foreach>
		</trim>
		<trim prefix="end_balance =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.endBalance}
             </foreach>
		</trim>
		<trim prefix="sum_debit =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.sumDebit}
             </foreach>
		</trim>
		<trim prefix="sum_credit =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.sumCredit}
             </foreach>
		</trim>
		<trim prefix="accumulate_credit =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.accumulateCredit}
             </foreach>
		</trim>
		<trim prefix="accumulate_debit =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.accumulateDebit}
             </foreach>
		</trim>
		<trim prefix="year_balance =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.yearBalance}
             </foreach>
		</trim>
		<trim prefix="book_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.bookId}
             </foreach>
		</trim>
		
		
		
		
		
		
		
		
		<trim prefix="remark =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.remark}
             </foreach>
		</trim>
		
		
		<trim prefix="modifier =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifier}
             </foreach>
		</trim>
		<trim prefix="modify_time =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.modifyTime}
             </foreach>
		</trim>
		<trim prefix="rec_ver =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.recVer}
             </foreach>
		</trim>
		<trim prefix="company_id =case"  suffix="end,"  >
             <foreach collection="list" item="item" index="index">
                     when (ID=#{item.id}) then #{item.companyId}
             </foreach>
		</trim>
		
	</trim>
	WHERE
	<foreach collection="list" separator="or" item="item" index="index" >
		<if test="item.id!=null">
		(ID=#{item.id}) AND (REC_VER=#{item.recVer}-1)
		</if>
	</foreach>	
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fi_course_balance fcb
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByPage" resultMap="BaseResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
    from fi_course_balance fcb
    <include refid="findByConditionWhere" />
  </select>
  
  <select id="selectAllByCondition" resultMap="BaseResultMap" parameterType="Map">
    select 
    <include refid="Base_Column_List" />
    from fi_course_balance fcb
    <include refid="findByConditionWhere" />
  </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xibin.fin.pojo.FiCourseBalance">
    select 
    <include refid="Base_Column_List" />
    from fi_course_balance fcb
    <include refid="findByExampleWhere" />
  </select>
  <select id="selectByKey" resultMap="BaseResultMap" resultType="java.util.List"  parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fi_course_balance fcb
    where 
    fcb.period = #{period,jdbcType=VARCHAR}
    and
    fcb.company_id = #{companyId,jdbcType=INTEGER}
    and
    fcb.course_no = #{courseNo,jdbcType=INTEGER}
  </select>
  
  
   <select id="queryCourseBalanceForVoucherGL" resultMap="queryCourseBalanceForVoucherGLResultMap" resultType="java.util.List"  parameterType="Map" >
	  SELECT
	  	fc.course_name,
  		fc.to_go,
		<include refid="Base_Column_List" />
		FROM
			fi_course_balance fcb
		LEFT JOIN fi_course fc on fcb.course_no = fc.course_no
			and fcb.company_id = fc.company_id
			and fcb.book_id = fc.book_id
		WHERE 
		1=1
		<!--  AND
		(fcb.sum_credit <![CDATA[<>]]> 0 OR fcb.sum_debit <![CDATA[<>]]> 0)-->
		AND fc.is_parent = 1
		<if test="companyId!=null and companyId!=''"> AND fcb.company_id = #{companyId}</if>
        <if test="bookId!=null and bookId!=''"> AND fcb.book_id = #{bookId}</if>
        <if test="courseNo!=null and courseNo!=''"> AND fcb.course_no = #{courseNo}</if>
        <if test="periodFrom!=null and periodFrom!=''"> AND fcb.period &gt;=  #{periodFrom}</if>
        <if test="periodTo!=null and periodTo!=''"> AND fcb.period &lt;= #{periodTo}</if>
        order by fcb.course_no,fcb.period
	</select>
	
	
	 <select id="queryCourseBalanceForward" resultMap="queryCourseBalanceForwardResultMap" resultType="java.util.List"  parameterType="Map" >
	 SELECT 
		 fcb.course_no,
		 fcb.sum_debit - fcb.sum_credit as debit_balance,
		 fcb.sum_credit - fcb.sum_debit as credit_balance
		 FROM fi_course_balance fcb
		LEFT JOIN fi_course fc on fcb.course_no = fc.course_no
		AND fcb.company_id = fc.company_id
		and fcb.book_id = fc.book_id
		WHERE 1=1
		<if test="types!=null and types!=''">
			AND fc.type in
          	<foreach item="item" index="index" collection="types" open="(" separator="," close=")">  
      			#{item}  
     	  	</foreach>
		</if>
		AND fcb.sum_debit - fcb.sum_credit != 0
		AND fcb.company_id = #{companyId,jdbcType=INTEGER}
	    AND fcb.book_id = #{bookId,jdbcType=INTEGER}
	 </select>
	 <select id="queryForBalanceSheet" resultMap="queryForBalanceSheetResultMap" resultType="java.util.List"  parameterType="Map" >
		 SELECT 
				fcb.course_no,
				fc.type,fc.to_go,
				fc.is_child,
				fcb.start_balance,
				fcb.end_balance,
				fcb.sum_credit,
				fcb.sum_debit,
				fcb.accumulate_credit,
				fcb.accumulate_debit,
				fcb.year_balance
		FROM fi_course_balance fcb
		LEFT JOIN fi_course fc 
		ON fc.course_no = fcb.course_no 
		AND fc.company_id = fcb.company_id
		WHERE 
			1=1 
			AND fcb.company_id = #{companyId}
			AND fcb.book_id = #{bookId}
			AND fcb.period = #{period}
	 </select>
	 
	 
</mapper>